apiVersion: redhatcop.redhat.io/v1alpha1
kind: NamespaceConfig
metadata:
  name: kubeflow-namespace
spec:
  labelSelector:
    matchLabels:
      app.kubernetes.io/part-of: kubeflow-profile  
  templates:
  - objectTemplate: |
      apiVersion: maistra.io/v1
      kind: ServiceMeshMember
      metadata:
        name: default
        namespace: {{ .Name }}
      spec:
        controlPlaneRef:
          namespace: istio-system
          name: kubeflow
  - objectTemplate: | 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: default-editor-nonroot
        namespace: {{ .Name }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:openshift:scc:nonroot
      subjects:
      - kind: ServiceAccount
        name: default-editor
  - objectTemplate: | 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: default-nonroot
        namespace: {{ .Name }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: system:openshift:scc:nonroot
      subjects:
      - kind: ServiceAccount
        name: default        
  - objectTemplate: | 
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: default-edit
        namespace: {{ .Name }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: edit
      subjects:
      - kind: ServiceAccount
        name: default        
  # - objectTemplate: | 
  #     apiVersion: redhatcop.redhat.io/v1alpha1
  #     kind: ResourceLocker
  #     metadata:
  #       name: sts-annotation
  #       namespace: {{ .Name }}
  #     spec:
  #       serviceAccountRef:
  #         name: default
  #       patches:
  #       - targetObjectRef:
  #           apiVersion: v1
  #           kind: ServiceAccount
  #           name: default-editor
  #           namespace: {{ .Name }}
  #         patchTemplate: |
  #           metadata:
  #             annotations:
  #                eks.amazonaws.com/audience: "sts.amazonaws.com"
  #                eks.amazonaws.com/token-expiration: "86400"
  #         patchType: application/strategic-merge-patch+json
  #         id: default-editor-aws-access
  - objectTemplate: |          
      apiVersion: v1
      kind: LimitRange
      metadata:
        name: default-resources
        namespace: {{ .Name }}
      spec:
        limits:
        - defaultRequest:
            cpu: 0.2
            memory: 100Mi
          type: Container   
  - objectTemplate: |
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: allow-from-serving-system-namespace
        namespace: {{ .Name }}
      spec:
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                serving.knative.openshift.io/system-namespace: "true"
        podSelector: {}
        policyTypes:
        - Ingress
# this is the right way to do it, not possible until: https://github.com/istio/api/issues/1965        
  # - objectTemplate: |
  #     apiVersion: security.istio.io/v1beta1
  #     kind: AuthorizationPolicy
  #     metadata:
  #       name: allowlist-kfserving-pods
  #       namespace: {{ .Name }}
  #     spec:
  #       selector:
  #         matchExpressions:
  #           - key: "serving.knative.dev/service"
  #             operator: Exists
  #       action: ALLOW
  #       rules:
  #       - {}
# workaround        
  - objectTemplate: |
      apiVersion: security.istio.io/v1beta1
      kind: AuthorizationPolicy
      metadata:
        name: allowlist-kfserving-pods
        namespace: {{ .Name }}
      spec:
        selector:
          matchLabels:
            workload-type: kfserving
        action: ALLOW
        rules:
        - {}
  - objectTemplate: |
      apiVersion: security.istio.io/v1beta1
      kind: AuthorizationPolicy
      metadata:
        name: bind-ml-pipeline-nb-{{ .Name }}
        namespace: kubeflow
      spec:
        selector:
          matchLabels:
            app: ml-pipeline
        rules:
        - from:
          - source:
              principals: [cluster.local/ns/{{ .Name }}/sa/default-editor]
  - objectTemplate: |
      apiVersion: networking.istio.io/v1alpha3
      kind: EnvoyFilter
      metadata:
        name: add-header
        namespace: {{ .Name }}
      spec:
        configPatches:
        - applyTo: VIRTUAL_HOST
          match:
            context: SIDECAR_OUTBOUND
            routeConfiguration:
              vhost:
                name: ml-pipeline.kubeflow.svc.cluster.local:8888
                route:
                  name: default
          patch:
            operation: MERGE
            value:
              request_headers_to_add:
              - append: true
                header:
                  key: kubeflow-userid
                  value: {{ .Annotations.owner }}
  - objectTemplate: |
      kind: NetworkPolicy
      apiVersion: networking.k8s.io/v1
      metadata:
        name: allow-katib-suggestion-from-controller
        namespace: {{ .Name }}
      spec:
        podSelector:
          matchExpressions:
            - key: katib.kubeflow.org/suggestion
              operator: Exists
        ingress:
          - ports:
              - protocol: TCP
                port: 6789
            from:
              - namespaceSelector: {}
                podSelector:
                  matchLabels:
                    katib.kubeflow.org/component: controller
        policyTypes:
          - Ingress
  - objectTemplate: |
      apiVersion: kubeflow.org/v1alpha1
      kind: PodDefault
      metadata:
        name: access-ml-pipeline
        namespace: {{ .Name }}
      spec:
        desc: Allow access to Kubeflow Pipelines
        selector:
          matchLabels:
            access-ml-pipeline: "true"
        volumes:
          - name: volume-kf-pipeline-token
            projected:
              sources:
                - serviceAccountToken:
                    path: token
                    expirationSeconds: 7200
                    audience: pipelines.kubeflow.org      
        volumeMounts:
          - mountPath: /var/run/secrets/kubeflow/pipelines
            name: volume-kf-pipeline-token
            readOnly: true
        env:
          - name: KF_PIPELINES_SA_TOKEN_PATH
            value: /var/run/secrets/kubeflow/pipelines/token
  - objectTemplate: |
      apiVersion: kubeflow.org/v1alpha1
      kind: PodDefault
      metadata:
        name: add-minio-secret
        namespace: {{ .Name }}
      spec:
        desc: Allows to access to MinIO, an S3-based object store installed in your Kubeflow cluster
        selector:
          matchLabels:
            add-minio-secret: "true"
        env:
          - name: MINIO_ID
            valueFrom:
              secretKeyRef:
                name: mlpipeline-minio-artifact
                key: accesskey
          - name: MINIO_PWD
            valueFrom:
              secretKeyRef:
                name: mlpipeline-minio-artifact
                key: secretkey
